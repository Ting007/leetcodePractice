class Solution(object):
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """
        transpose = [list(i) for i in zip(*board)]
        for i in range(9):
        	A = set()
        	for num in board[i]:
        		if num != '.':
        			if num in A:
        				return False
        			A.add(num)
        	B = set()
        	for num in transpose[i]:
        		if num !- '.':
        			if num in B:
        				return False
        			B.add(num)
        for j in range(0, 9, 3):
        	C = set()
        	for i in range(9):
        		line = board[i][j:(j+3)]
        		# print(line)
        		if i %3 == 0:
        			C = set()
        		for num in line:
        			if num != '.':
        				if num in C:
        					return False
        				C.add(num)
        return True 
        


if __name__ == '__main__':
	board1 = [
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
	board2 = [
  ["8","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]

	board3 = [
	[".",".",".",".","5",".",".","1","."],
	[".","4",".","3",".",".",".",".","."],
	[".",".",".",".",".","3",".",".","1"],
	["8",".",".",".",".",".",".","2","."],
	[".",".","2",".","7",".",".",".","."],
	[".","1","5",".",".",".",".",".","."],
	[".",".",".",".",".","2",".",".","."],
	[".","2",".","9",".",".",".",".","."],
	[".",".","4",".",".",".",".",".","."]
]
	foo = Solution()
	x = foo.isValidSudoku(board3)
	print(x)